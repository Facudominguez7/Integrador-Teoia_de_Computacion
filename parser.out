Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> expression_statement
Rule 5     statement -> assignment_statement
Rule 6     expression_statement -> expression SEMICOLON
Rule 7     assignment_statement -> ID ASSIGN expression SEMICOLON
Rule 8     expression -> term
Rule 9     expression -> expression PLUS term
Rule 10    expression -> expression MINUS term
Rule 11    term -> factor
Rule 12    term -> term TIMES factor
Rule 13    term -> term DIVIDE factor
Rule 14    factor -> NUMBER
Rule 15    factor -> ID
Rule 16    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ASSIGN               : 7
DIVIDE               : 13
ID                   : 7 15
LPAREN               : 16
MINUS                : 10
NUMBER               : 14
PLUS                 : 9
RPAREN               : 16
SEMICOLON            : 6 7
TIMES                : 12
error                : 

Nonterminals, with rules where they appear

assignment_statement : 5
expression           : 6 7 9 10 16
expression_statement : 4
factor               : 11 12 13
program              : 0
statement            : 2 3
statement_list       : 1 3
term                 : 8 9 10 12 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . expression_statement
    (5) statement -> . assignment_statement
    (6) expression_statement -> . expression SEMICOLON
    (7) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (8) expression -> . term
    (9) expression -> . expression PLUS term
    (10) expression -> . expression MINUS term
    (11) term -> . factor
    (12) term -> . term TIMES factor
    (13) term -> . term DIVIDE factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 7
    NUMBER          shift and go to state 10
    LPAREN          shift and go to state 11

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression_statement           shift and go to state 4
    assignment_statement           shift and go to state 5
    expression                     shift and go to state 6
    term                           shift and go to state 8
    factor                         shift and go to state 9

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . expression_statement
    (5) statement -> . assignment_statement
    (6) expression_statement -> . expression SEMICOLON
    (7) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (8) expression -> . term
    (9) expression -> . expression PLUS term
    (10) expression -> . expression MINUS term
    (11) term -> . factor
    (12) term -> . term TIMES factor
    (13) term -> . term DIVIDE factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    $end            reduce using rule 1 (program -> statement_list .)
    ID              shift and go to state 7
    NUMBER          shift and go to state 10
    LPAREN          shift and go to state 11

    statement                      shift and go to state 12
    expression_statement           shift and go to state 4
    assignment_statement           shift and go to state 5
    expression                     shift and go to state 6
    term                           shift and go to state 8
    factor                         shift and go to state 9

state 3

    (2) statement_list -> statement .

    ID              reduce using rule 2 (statement_list -> statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> expression_statement .

    ID              reduce using rule 4 (statement -> expression_statement .)
    NUMBER          reduce using rule 4 (statement -> expression_statement .)
    LPAREN          reduce using rule 4 (statement -> expression_statement .)
    $end            reduce using rule 4 (statement -> expression_statement .)


state 5

    (5) statement -> assignment_statement .

    ID              reduce using rule 5 (statement -> assignment_statement .)
    NUMBER          reduce using rule 5 (statement -> assignment_statement .)
    LPAREN          reduce using rule 5 (statement -> assignment_statement .)
    $end            reduce using rule 5 (statement -> assignment_statement .)


state 6

    (6) expression_statement -> expression . SEMICOLON
    (9) expression -> expression . PLUS term
    (10) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 7

    (7) assignment_statement -> ID . ASSIGN expression SEMICOLON
    (15) factor -> ID .

    ASSIGN          shift and go to state 16
    TIMES           reduce using rule 15 (factor -> ID .)
    DIVIDE          reduce using rule 15 (factor -> ID .)
    SEMICOLON       reduce using rule 15 (factor -> ID .)
    PLUS            reduce using rule 15 (factor -> ID .)
    MINUS           reduce using rule 15 (factor -> ID .)


state 8

    (8) expression -> term .
    (12) term -> term . TIMES factor
    (13) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 8 (expression -> term .)
    PLUS            reduce using rule 8 (expression -> term .)
    MINUS           reduce using rule 8 (expression -> term .)
    RPAREN          reduce using rule 8 (expression -> term .)
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 18


state 9

    (11) term -> factor .

    TIMES           reduce using rule 11 (term -> factor .)
    DIVIDE          reduce using rule 11 (term -> factor .)
    SEMICOLON       reduce using rule 11 (term -> factor .)
    PLUS            reduce using rule 11 (term -> factor .)
    MINUS           reduce using rule 11 (term -> factor .)
    RPAREN          reduce using rule 11 (term -> factor .)


state 10

    (14) factor -> NUMBER .

    TIMES           reduce using rule 14 (factor -> NUMBER .)
    DIVIDE          reduce using rule 14 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 14 (factor -> NUMBER .)
    PLUS            reduce using rule 14 (factor -> NUMBER .)
    MINUS           reduce using rule 14 (factor -> NUMBER .)
    RPAREN          reduce using rule 14 (factor -> NUMBER .)


state 11

    (16) factor -> LPAREN . expression RPAREN
    (8) expression -> . term
    (9) expression -> . expression PLUS term
    (10) expression -> . expression MINUS term
    (11) term -> . factor
    (12) term -> . term TIMES factor
    (13) term -> . term DIVIDE factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 20
    LPAREN          shift and go to state 11

    expression                     shift and go to state 19
    term                           shift and go to state 8
    factor                         shift and go to state 9

state 12

    (3) statement_list -> statement_list statement .

    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)


state 13

    (6) expression_statement -> expression SEMICOLON .

    ID              reduce using rule 6 (expression_statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 6 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 6 (expression_statement -> expression SEMICOLON .)
    $end            reduce using rule 6 (expression_statement -> expression SEMICOLON .)


state 14

    (9) expression -> expression PLUS . term
    (11) term -> . factor
    (12) term -> . term TIMES factor
    (13) term -> . term DIVIDE factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 20
    LPAREN          shift and go to state 11

    term                           shift and go to state 21
    factor                         shift and go to state 9

state 15

    (10) expression -> expression MINUS . term
    (11) term -> . factor
    (12) term -> . term TIMES factor
    (13) term -> . term DIVIDE factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 20
    LPAREN          shift and go to state 11

    term                           shift and go to state 22
    factor                         shift and go to state 9

state 16

    (7) assignment_statement -> ID ASSIGN . expression SEMICOLON
    (8) expression -> . term
    (9) expression -> . expression PLUS term
    (10) expression -> . expression MINUS term
    (11) term -> . factor
    (12) term -> . term TIMES factor
    (13) term -> . term DIVIDE factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 20
    LPAREN          shift and go to state 11

    expression                     shift and go to state 23
    term                           shift and go to state 8
    factor                         shift and go to state 9

state 17

    (12) term -> term TIMES . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 20
    LPAREN          shift and go to state 11

    factor                         shift and go to state 24

state 18

    (13) term -> term DIVIDE . factor
    (14) factor -> . NUMBER
    (15) factor -> . ID
    (16) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 10
    ID              shift and go to state 20
    LPAREN          shift and go to state 11

    factor                         shift and go to state 25

state 19

    (16) factor -> LPAREN expression . RPAREN
    (9) expression -> expression . PLUS term
    (10) expression -> expression . MINUS term

    RPAREN          shift and go to state 26
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 20

    (15) factor -> ID .

    TIMES           reduce using rule 15 (factor -> ID .)
    DIVIDE          reduce using rule 15 (factor -> ID .)
    RPAREN          reduce using rule 15 (factor -> ID .)
    PLUS            reduce using rule 15 (factor -> ID .)
    MINUS           reduce using rule 15 (factor -> ID .)
    SEMICOLON       reduce using rule 15 (factor -> ID .)


state 21

    (9) expression -> expression PLUS term .
    (12) term -> term . TIMES factor
    (13) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 9 (expression -> expression PLUS term .)
    PLUS            reduce using rule 9 (expression -> expression PLUS term .)
    MINUS           reduce using rule 9 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 9 (expression -> expression PLUS term .)
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 18


state 22

    (10) expression -> expression MINUS term .
    (12) term -> term . TIMES factor
    (13) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 10 (expression -> expression MINUS term .)
    PLUS            reduce using rule 10 (expression -> expression MINUS term .)
    MINUS           reduce using rule 10 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 10 (expression -> expression MINUS term .)
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 18


state 23

    (7) assignment_statement -> ID ASSIGN expression . SEMICOLON
    (9) expression -> expression . PLUS term
    (10) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 27
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 24

    (12) term -> term TIMES factor .

    TIMES           reduce using rule 12 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 12 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 12 (term -> term TIMES factor .)
    PLUS            reduce using rule 12 (term -> term TIMES factor .)
    MINUS           reduce using rule 12 (term -> term TIMES factor .)
    RPAREN          reduce using rule 12 (term -> term TIMES factor .)


state 25

    (13) term -> term DIVIDE factor .

    TIMES           reduce using rule 13 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 13 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 13 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 13 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 13 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 13 (term -> term DIVIDE factor .)


state 26

    (16) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 16 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 16 (factor -> LPAREN expression RPAREN .)


state 27

    (7) assignment_statement -> ID ASSIGN expression SEMICOLON .

    ID              reduce using rule 7 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 7 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 7 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    $end            reduce using rule 7 (assignment_statement -> ID ASSIGN expression SEMICOLON .)

