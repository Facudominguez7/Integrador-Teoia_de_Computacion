
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN DIVIDE ID LPAREN MINUS NUMBER PLUS RPAREN SEMICOLON TIMESstatements : statements statementstatements : statementstatement : ID ASSIGN expression SEMICOLONexpression : expression PLUS term\n                  | expression MINUS termexpression : termterm : term TIMES factor\n            | term DIVIDE factorterm : factorfactor : NUMBERfactor : IDfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'ID':([0,1,2,4,5,11,12,13,14,15,16,],[3,3,-2,-1,6,6,-3,6,6,6,6,]),'$end':([1,2,4,12,],[0,-2,-1,-3,]),'ASSIGN':([3,],[5,]),'NUMBER':([5,11,13,14,15,16,],[10,10,10,10,10,10,]),'LPAREN':([5,11,13,14,15,16,],[11,11,11,11,11,11,]),'TIMES':([6,8,9,10,18,19,20,21,22,],[-11,15,-9,-10,15,15,-7,-8,-12,]),'DIVIDE':([6,8,9,10,18,19,20,21,22,],[-11,16,-9,-10,16,16,-7,-8,-12,]),'SEMICOLON':([6,7,8,9,10,18,19,20,21,22,],[-11,12,-6,-9,-10,-4,-5,-7,-8,-12,]),'PLUS':([6,7,8,9,10,17,18,19,20,21,22,],[-11,13,-6,-9,-10,13,-4,-5,-7,-8,-12,]),'MINUS':([6,7,8,9,10,17,18,19,20,21,22,],[-11,14,-6,-9,-10,14,-4,-5,-7,-8,-12,]),'RPAREN':([6,8,9,10,17,18,19,20,21,22,],[-11,-6,-9,-10,22,-4,-5,-7,-8,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,1,],[2,4,]),'expression':([5,11,],[7,17,]),'term':([5,11,13,14,],[8,8,18,19,]),'factor':([5,11,13,14,15,16,],[9,9,9,9,20,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements_multiple','ansintactico.py',31),
  ('statements -> statement','statements',1,'p_statements_single','ansintactico.py',35),
  ('statement -> ID ASSIGN expression SEMICOLON','statement',4,'p_statement_assign','ansintactico.py',39),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','ansintactico.py',43),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','ansintactico.py',44),
  ('expression -> term','expression',1,'p_expression_term','ansintactico.py',48),
  ('term -> term TIMES factor','term',3,'p_term_binop','ansintactico.py',52),
  ('term -> term DIVIDE factor','term',3,'p_term_binop','ansintactico.py',53),
  ('term -> factor','term',1,'p_term_factor','ansintactico.py',57),
  ('factor -> NUMBER','factor',1,'p_factor_number','ansintactico.py',61),
  ('factor -> ID','factor',1,'p_factor_id','ansintactico.py',65),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','ansintactico.py',69),
]
